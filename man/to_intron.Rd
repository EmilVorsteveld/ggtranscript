% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_intron.R
\name{to_intron}
\alias{to_intron}
\title{Convert exon co-ordinates to introns}
\usage{
to_intron(exons, group_var = NULL)
}
\arguments{
\item{exons}{\code{data.frame} containing exonic ranges, which can contain data
from from multiple transcripts.}

\item{group_var}{\code{character} if input \code{data.frame} contains more than 1
transcript, \code{group_var} should specify the column that differentiates
transcripts (e.g. "transcript_id").}
}
\description{
Taking as input set of \code{exons}, \code{to_intron} will return the corresponding
introns. \code{to_intron} expects inputted exons to either 1. originate from a
single transcript or 2. be grouped via \code{group_var} such that each group
corresponds to a single transcript. In other words, \code{to_intron} assumes that
exons (from each transcript/\code{group_var}) do not overlap one another.
}
\details{
Important: for visualisation purposes this functions defines introns
precisely as the exon boundaries, rather than the intron start/end being
(exon end + 1)/(exon start - 1).
}
\examples{
library(magrittr)

example_exons <-
    dplyr::tibble(
        start = c(5, 10, 15, 20),
        end = c(7, 12, 17, 22),
        tx = c("A", "A", "B", "B")
    )

example_exons

to_intron(example_exons, group_var = "tx")

# this can be convenient when plotting transcript annotation
example_exons \%>\%
    ggplot2::ggplot(
        ggplot2::aes(
            xstart = start,
            xend = end,
            y = tx
        )
    ) +
    geom_range() +
    geom_intron(
        data = to_intron(example_exons, "tx")
    )
}
