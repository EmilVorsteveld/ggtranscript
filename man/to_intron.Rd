% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_intron.R
\name{to_intron}
\alias{to_intron}
\title{Convert exon co-ordinates to introns}
\usage{
to_intron(exons, group_var = NULL)
}
\arguments{
\item{exons}{\code{data.frame()} contains exons which can originate from multiple
transcripts differentiated by \code{group_var}.}

\item{group_var}{\code{character()} if input data originates from more than 1
transcript, \code{group_var} must specify the column that differentiates
transcripts (e.g. "transcript_id").}
}
\description{
Given a set of \code{exons}, \code{to_intron()} will return the corresponding introns.
If \code{exons} contains data originating from more than 1 transcript, \code{group_var}
must specify the column that differentiates transcripts (e.g.
"transcript_id").
}
\details{
It is important to note that, for visualisation purposes, \code{to_intron()}
defines introns precisely as the exon boundaries, rather than the intron
start/end being (exon end + 1)/(exon start - 1).
}
\examples{
library(magrittr)

example_exons <-
    dplyr::tibble(
        start = c(5, 10, 15, 20),
        end = c(7, 12, 17, 22),
        tx = c("A", "A", "B", "B")
    )

example_exons

to_intron(example_exons, group_var = "tx")

# this can be convenient when plotting transcript annotation
example_exons \%>\%
    ggplot2::ggplot(
        ggplot2::aes(
            xstart = start,
            xend = end,
            y = tx
        )
    ) +
    geom_range() +
    geom_intron(
        data = to_intron(example_exons, "tx")
    )
}
