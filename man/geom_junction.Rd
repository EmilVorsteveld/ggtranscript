% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_junction.R
\name{geom_junction}
\alias{geom_junction}
\title{Plot junction curves}
\usage{
geom_junction(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  junction.orientation = "alternating",
  junction.y.max = 1,
  angle = 90,
  ncp = 15,
  na.rm = FALSE,
  orientation = NA,
  show.legend = NA,
  inherit.aes = TRUE,
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{junction.orientation}{\code{character} one of "alternating", "top" or
"bottom". Specifies where the junctions will be plotted with respect to
each \code{y} group.}

\item{junction.y.max}{\code{double} specifies the max y-value of each junction
curve. This can be used to modify the junctions when they look too flat,
overlap with another transcript or lie outside of the plot.}

\item{angle}{A numeric value between 0 and 180,
    giving an amount to skew the control
    points of the curve.  Values less than 90 skew the curve towards
    the start point and values greater than 90 skew the curve
    towards the end point.}

\item{ncp}{The number of control points used to draw the curve.
    More control points creates a smoother curve.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{orientation}{The orientation of the layer. The default (\code{NA})
automatically determines the orientation from the aesthetic mapping. In the
rare event that this fails it can be given explicitly by setting \code{orientation}
to either \code{"x"} or \code{"y"}. See the \emph{Orientation} section for more detail.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}
}
\description{
\code{geom_junction()} draws curves that are designed to represent junction reads
from RNA-sequencing data. The curves can be modified using \code{junction.y.max},
\code{angle} and \code{ncp} parameters. By default, the junctions will alternate
between being plotted on the top and bottom of each \code{y} group, however this
can be changed via \code{junction.orientation}.
}
\examples{

library(magrittr)

example_introns <-
    gba_ens_105 \%>\%
    dplyr::filter(type == "exon") \%>\%
    to_intron(group_var = "transcript_name")

example_introns

base <- example_introns \%>\%
    dplyr::filter(transcript_name == "GBA-202") \%>\%
    ggplot2::ggplot(ggplot2::aes(
        xstart = start,
        xend = end,
        y = transcript_name
    ))

# sometimes, depending on the number and widths of transcripts and junctions
# junctions will go overlap one another or extend beyond the plot margin
base + geom_junction()

# in such cases, junction.y.max can be used to rectify the max y
base + geom_junction(junction.y.max = 0.5)

# junction.orientation determines where the junction are plotted
# either on the top or bottom
base + geom_junction(junction.orientation = "top", junction.y.max = 0.5)
base + geom_junction(junction.orientation = "bottom", junction.y.max = 0.5)

# geom_junction can also be used with multiple y values
base_multi_transcript <- example_introns \%>\%
    ggplot2::ggplot(ggplot2::aes(
        xstart = start,
        xend = end,
        y = transcript_name
    ))

base_multi_transcript + geom_junction()

# and as a ggplot2 extension can be used aes and params
base_multi_transcript + geom_junction(
    ggplot2::aes(colour = transcript_name),
    size = 0.75
)
}
